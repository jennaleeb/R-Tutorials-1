"PFE        <-> PFE, theta4, NA",
"EA         <-> EA, theta5, NA",
"CP         <-> CP, theta6, NA",
"Ability    <-> Ability, NA, 1",
"Aspiration <-> Aspiration, NA, 1")
writeLines(mod, con = "ability_model.txt")
ability_model <- specifyModel(file = "ability_model.txt")
ability_model
ability_sem <- sem(ability_model, ability, 556)
sem(ability_model, ability, 556)
data(sem)
data()
data(package = .packages(all.available = TRUE))
data(Tests)
Tests
data(Klein)
Klein
Klein$P[-22]
Klein$P.lag <- c(NA, Klein$P[-22])
Klein$X.lag <- c(NA, Klein$X[-22])
Klein[1:3,]
Klein.eqn1 <- tsls(C ~ P + P.lag + I(Wp + Wg),
+ instruments=~G + T + Wg + I(Year - 1931) + K.lag + P.lag + X.lag,
+ data=Klein)
Klein.eqn1 <- tsls(C ~ P + P.lag + I(Wp + Wg)
+ instruments=~G + T + Wg + I(Year - 1931) + K.lag + P.lag + X.lag
Klein.eqn1 <- tsls(C ~ P + P.lag + I(Wp + Wg) + instruments=~G + T + Wg + I(Year - 1931) + K.lag + P.lag + X.lag + data=Klein)
Klein.eqn1 <- tsls(C ~ P + P.lag + I(Wp + Wg), instruments=~G + T + Wg + I(Year - 1931) + K.lag + P.lag + X.lag, data=Klein)
Klein.eqn1
summary(Klein.eqn1)
help(tsls)
Klein
library(rio)
library(dplyr)
library(knitr)
library(ggplot2)
cluster <- import("cluster_output_6.csv")
setwd("~/")
library(rio)
setwd("~/")
getwd()
setwd("~/Dropbox/GradSchool/Experimental Methods/R-Tutorials-1")
lm.1 <- lm(libido ~ dose, data = data)
data
data <- read.delim("Viagra.dat")
getwd()
setwd("/Users/jenna/Dropbox (Personal)/GradSchool/Experimental Methods/R-Tutorials-1/_source")
data <- read.delim("Viagra.dat")
data
class(data$dose)
data$dose <- as.factor(data$dose)
data$dose <- as.factor(data$dose)
data$dose <- as.factor(data$dose)
class(data$dose)
levels(data$dose) <- c("Placebo", "Low Dose", "High Dose")
class(data$dose)
str(data$dose)
data <- read.delim("Viagra.dat")
str(data$dose)
data$dose <- as.factor(data$dose)
str(data$dose)
levels(data$dose) <- c("Placebo", "Low Dose", "High Dose")
lm.1 <- lm(libido ~ dose, data = data)
mean(subset(data, data$dose == "Placebo")$libido)
summary(lm.1)
contrasts(lm.1)
contrasts(data$dose)
mean(subset(data, data$dose == "Placebo")$libido)
(mean(subset(data, data$dose == "Low Dose")$libido))- (mean(subset(data, data$dose == "Placebo")$libido))
(mean(subset(data, data$dose == "High Dose")$libido))- (mean(subset(data, data$dose == "Placebo")$libido))
library(knitr)
library(ggplot2)
data <- read.delim("Viagra.dat")
str(data$dose)
t.test(subset(data, data$dose == "High Dose")$libido, subset(data, data$dose == "Low Dose")$libido)
subset(data, data$dose == "High Dose")$libido
subset(data, data$dose == "High Dose")$libido)
subset(data, data$dose == "High Dose")$libido
data
str(data$dose)
data$dose <- as.factor(data$dose)
levels(data$dose) <- c("Placebo", "Low Dose", "High Dose")
t.test(subset(data, data$dose == "High Dose")$libido, subset(data, data$dose == "Low Dose")$libido)
data <- read.delim("Viagra.dat")
str(data$dose)
data
data$dose <- as.factor(data$dose)
str(data$dose)
levels(data$dose)
levels(data$dose) <- c("Placebo", "Low Dose", "High Dose")
str(data$dose)
data
lm.1 <- lm(libido ~ dose, data = data)
summary(lm.1)
data
mean(subset(data, data$dose == "Placebo")$libido)
(mean(subset(data, data$dose == "Low Dose")$libido))- (mean(subset(data, data$dose == "Placebo")$libido))
(mean(subset(data, data$dose == "High Dose")$libido))- (mean(subset(data, data$dose == "Placebo")$libido))
viagraModel <- aov(libido ~ dose, data = data)
summary(viagraModel)
summary.lm(viagraModel)
contrasts(data$dose)
str(data$dose)
contrast_1 <- c(-2,1,1) # placebo vs viagra
contrast_2 <- c(0,-1,1) # high vs low
contrasts(data$dose) <- cbind(contrast_1, contrast_2)
contrasts(data$dose)
c(-2,1,1)
c(0,-1,1)
rbind(contrast_1, contrast_2)
contrasts(data$dose) <- rbind(contrast_1, contrast_2)
mtcars
lm.2 <- (disp ~ mpg)
summary(lm.2)
lm.2 <- (disp ~ mpg, data = mtcars)
lm.2 <- lm(disp ~ mpg, data = mtcars)
summary(lm.2)
mpg
mtcars
lm.2 <- lm(disp ~ mpg + drat , data = mtcars)
summary(lm.2)
lm.2 <- lm(disp ~ drat + mpg , data = mtcars)
summary(lm.2)
mydata <- read.csv("http://www.ats.ucla.edu/stat/data/binary.csv")
View(mydata)
getwd()
range(10)
range(0,10)
range(0,10,1)
range(stats::rnorm(100))
range(0,1, 10)
1:5
ln(1:10)
log(1:10)
x <- 1:10
y <- log(x)
ggplot(aes(x,y)) + geom_point()
library(ggplot2)
ggplot(aes(x,y)) + geom_point()
cbind(x,y)
data <- cbind(x,y)
ggplot(data = data, aes(x,y)) + geom_point()
data <- as.data.frame(x,y)
data <- data.frame(x,y)
data
ggplot(data = data, aes(x,y)) + geom_point()
x <- 0:1
x
seq(0, 1, length.out = 10)
x <- seq(0, 1, length.out = 10)
y <- log(x)
data <- data.frame(x,y)
ggplot(data = data, aes(x,y)) + geom_point()
x <- seq(0, 1, length.out = 100)
y <- log(x)
data <- data.frame(x,y)
ggplot(data = data, aes(x,y)) + geom_point()
library(mlogit)
data <- read.csv("http://www.ats.ucla.edu/stat/data/binary.csv")
head(data)
str(data)
factor(data$rank)
model.1 <- glm(admit ~ gre + gpa + rank, data = data, family = "binomial")
summary(model.1)
model.1 <- glm(factor(admit) ~ gre + gpa + rank, data = data, family = "binomial")
summary(model.1)
model.1 <- glm(admit ~ gpa, data = data, family = "binomial")
summary(model.1)
model.1.Chi <- model.1$null.deviance - model.1$deviance
model.1.Chi
round(model.1.Chi, 2)
df <- model.1$df.null - model.1$df.residual
df
df
pchisq(model.1.Chi, df)
1 - pchisq(model.1.Chi, df)
exp(model.1$coefficients)
- $$\frac{\text{odds after a unit change in the predictor}}{\text{original odds}}$$
model.1$coefficients
model.1 <- glm(admit, data = data, family = "binomial")
model.2 <- glm(admit ~ gpa + gre + rank, data = data, family = "binomial")
summary(model.2)
str(rank)
str(data$rank)
summary(model.2)
data$rank <- factor(data$rank)
model.2 <- glm(admit ~ gpa + gre + rank, data = data, family = "binomial")
summary(model.2)
contrasts(data$rank)
exp(model.2$coefficients)
exp(model.1$coefficients)
anova(model.1, model.2)
1 - pchisq(28.45, 4)
1 - pchisq(0.0029835, 1)
1 - pchisq(28.45, 4)
nrow(data)
summary(data)
str(data$admit)
data$admit <- as.factor(data$admit)
summary(data)
setwd("~/Dropbox (Personal)/GradSchool/Experimental Methods/R-Tutorials-1/_source")
head(mtcars)
head(mtcars[,c("am","mpg","hp")])
str(mtcars$am)
mtcars$am <- as.factor(mtcars$am)
aov(mpg~hp, data = mtcars)
t.test(mpg~hp, data = mtcars)
subset(mtcars$am = 1)
subset(mtcars, am = 1)
subset(mtcars, am = 1, select = c(mpg))
subset(mtcars, am = 1, select = c(mpg, am))
subset(mtcars, am = 1, select = c(mpg, am = 1))
subset(mtcars, am = 1, select = c(mpg, am = "1""))
subset(mtcars, am = 1, select = c(mpg, am = "1"))
subset(mtcars, am = "1"", select = c(mpg))
subset(mtcars, am = "1", select = c(mpg))
subset(mtcars, mtcars$am = "1", select = c(mpg))
mtcars$am
mtcars$am = "1"
mtcars$am <- as.factor(mtcars$am)
mtcars$am
mtcars$am <- as.factor(mtcars$am)
mtcars$am == 1
mtcars[,mtcars$am == 1]
subset(mtcars, select(mtcars$am == 1))
subset(mtcars, select = c(mtcars$am == 1))
mtcars[mtcars$am == 1,]
mtcars[mtcars$am == 1,]$am
mtcars[mtcars$am == 1,]$mpg
nrow(mtcars)
nrow(mtcars[mtcars$am == 1,]$mpg)
nrow(mtcars[mtcars$am == 1,])
nrow(mtcars[mtcars$am == -,])
nrow(mtcars[mtcars$am == 0,])
mtcars[mtcars$am == 0,]$hp
t.test(mtcars[mtcars$am == 0,]$hp, mtcars[mtcars$am == 1,]$hp)
leveneTest(mtcars$hp, mtcars$am)
library(car)
leveneTest(mtcars$hp, mtcars$am)
result <- aov(mpg~hp*am,data = mtcars)
print(summary(result))
result <- aov(mpg~am,data = mtcars)
print(summary(result))
result <- aov(mpg~am+hp,data = mtcars)
print(summary(result))
result <- aov(mpg~hp*am,data = mtcars)
print(summary(result))
result <- aov(mpg~hp+am,data = mtcars)
print(summary(result))
summary(result)
summary.l(result)
summary.lm(result)
result <- aov(mpg~am,data = mtcars)
summary.lm(result)
result.1 <- aov(mpg~hp+am,data = mtcars)
summary.lm(result.1)
result.2 <- aov(mpg~hp+am,data = mtcars)
summary.lm(result.2)
result.2 <- aov(mpg~am,data = mtcars)
summary.lm(result.2)
summary.lm(result.1)
summary.lm(result.2)
anova(result.1, result.2)
anova(result.2, result.1)
anova(result.2, result.3)
result.3 <- aov(mpg~hp*am,data = mtcars)
summary.lm(result.3)
anova(result.2, result.3)
anova(result.1, result.3)
Anova(result.2, result.1)
summary.lm(result.2)
summary.lm(result.1)
Anova(result.2, result.1)
ggplot(mtcars, aes(mpg, hp)) + geom_point()
library(ggplot2)
ggplot(mtcars, aes(mpg, hp)) + geom_point()
ggplot(mtcars, aes(hp, mpg)) + geom_point()
cor(hp, mpg)
cor(mtcars$hp, mtcars$mpg)
ggplot(mtcars, aes(hp, mpg)) + geom_point() + geom_text(data = labels, aes(x = x, y = y, label = cor(mtcars$hp, mtcars$mpg)), parse = TRUE)
ggplot(mtcars, aes(hp, mpg)) + geom_point() + geom_text(label = cor(mtcars$hp, mtcars$mpg)), parse = TRUE)
ggplot(mtcars, aes(hp, mpg)) + geom_point() + geom_text(label = cor(mtcars$hp, mtcars$mpg)))
ggplot(mtcars, aes(hp, mpg)) + geom_point() + geom_text(label = cor(mtcars$hp, mtcars$mpg))
ggplot(mtcars, aes(hp, mpg)) + geom_point() + geom_text(data = labels, label = cor(mtcars$hp, mtcars$mpg))
labels = data.frame(x = 3, y = 3, label = corr_eqn(mtcars$hp, mtcars$mpg))
labels = data.frame(x = 3, y = 3, label = cor(mtcars$hp, mtcars$mpg))
ggplot(mtcars, aes(hp, mpg)) + geom_point() + geom_text(data = labels, label = cor(mtcars$hp, mtcars$mpg))
labels = data.frame(x = 3, y = 3, label = cor(mtcars$hp, mtcars$mpg))
leveneTest(mtcars$mpg, mtcars$am)
leveneTest(mpg ~ hp*am, data=mtcars)
leveneTest(mpg ~ am*hp, data=mtcars)
leveneTest(mpg ~ hp, data=mtcars)
leveneTest(am ~ hp, data=mtcars)
leveneTest(mpg ~ am, data=mtcars)
leveneTest(mpg ~ am*hp, data=mtcars)
leveneTest(mpg ~ am, data=mtcars)
str(Moore)
setwd("~/Dropbox (Personal)/GradSchool/Experimental Methods/R-Tutorials-1/_source")
setwd("~/Dropbox (Personal)/GradSchool/Experimental Methods/R-Tutorials-1/figure/source/2016-11-15-tutorial-9-repeated")
setwd("~/Dropbox (Personal)/GradSchool/Experimental Methods/R-Tutorials-1/_source")
data <- fread("http://bit.ly/2fT3QXW")
library(data.table)
data <- fread("http://bit.ly/2fT3QXW")
head(data)
nrow(data)
library(knitr)
library(ggplot2)
data <- read.delim("TutorMarks.dat")
kable(head(data))
dataLong <- melt(data, id = "Essay")
dataLong
names(dataLong)
names(dataLong) <- c("Essay", "Tutor", "Grade")
dataLong
dataLong$Tutor
str(dataLong$Tutor)
levels(dataLong$Tutor)
library(ez)
model.1 <- ezANOVA(dataLong, dv = .(Grade), wid = .(Essay), within = .(Tutor), detailed = TRUE, type = 3)
model.1
model.1
contrasts(dataLong$Tutor)
model.1 <- ezANOVA(dataLong, dv = .(Grade), wid = .(Essay), within = .(Tutor), detailed = TRUE)
model.1
pairwise.t.test(dataLong$Grade, dataLong$Tutor, paired = TRUE, p.adjust.method = "bonferroni")
dating <- read.delim("LooksOrPersonality.dat")
```
dating
names(dating)
names(dating)[3:11]
datingLong <- melt(dating, id = c("participant", "gender"), measured = names(dating)[3:11])
datingLong
names(datingLong)
names(datingLong) <- c("participant", "gender", "groups", "rating")
datingLong$personality <- gl(3,60, labels=c("Charismatic", "Average", "Dull"))
datingLong$looks <- gl(3,20,180, labels=c("Attractive", "Average", "Ugly"))
datingLong
head(datingLong)
str(datingLong)
model.2 <- ezANOVA(data = datingLong, dv = .(rating), wid = .(participant), between = .(gender), within = .(looks, personality), detailed = TRUE)
model.2
model.2
dating <- read.delim("LooksOrPersonality.dat")
datingLong <- melt(dating, id = c("participant", "gender"), measured = names(dating)[3:11])
names(datingLong) <- c("participant", "gender", "groups", "rating")
asd
dating
datingLong
datingLong$personality <- gl(3,60, labels=c("Charismatic", "Average", "Dull"))
datingLong$looks <- gl(3,20,180, labels=c("Attractive", "Average", "Ugly"))
datingLong
gl(3,60, labels=c("Charismatic", "Average", "Dull"))
gl(2,20)
nrow(dataLong)
nrow(datingLong)
gl(3,2,120)
datingLong
dating <- read.delim("LooksOrPersonality.dat")
datingLong <- melt(dating, id = c("participant", "gender"), measured = names(dating)[3:11])
datingLong
names(datingLong) <- c("participant", "gender", "groups", "rating")
datingLong$personality <- gl(3,60, labels=c("Charismatic", "Average", "Dull"))
datingLong$looks <- gl(3,20,180, labels=c("Attractive", "Average", "Ugly"))
dataLong
dating
model.2 <- ezANOVA(data = datingLong, dv = .(rating), wid = .(participant), between = .(gender), within = .(looks, personality), detailed = TRUE)
model.2
dataLong
getwd()
setwd("~/Dropbox (Personal)/GradSchool/Experimental Methods/R-Tutorials-1/_source")
data <- read.delim("coulrophobia.dat")
View(data)
str(data)
class(data$infotype)
levels(data$infotype)
stat.desc(data$infotype)
shapiro.test(subset(data, infotype == "Advert"))
subset(data, infotype == "Advert")
shapiro.test(subset(data, infotype == "Advert")$beliefs)
shapiro.test(subset(data, infotype == "Story")$beliefs)
shapiro.test(subset(data, infotype == "Exposure")$beliefs)
shapiro.test(subset(data, infotype == "None")$beliefs)
shapiro.test(subset(data, infotype == "Advert")$beliefs) #
shapiro.test(subset(data, infotype == "Story")$beliefs) # .
shapiro.test(subset(data, infotype == "Exposure")$beliefs) # .
shapiro.test(subset(data, infotype == "None")$beliefs) #
by(infotype, shapiro.test)
by(data$infotype, shapiro.test)
by(data, infotype, shapiro.test)
by(data, data$infotype, shapiro.test)
by(data, data$infotype, summary)
by(data$beliefs, data$infotype, shapiro.test)
levene.test()
library(car)
levene.test(data)
levene.test(data$beliefs ~ data$infotype)
leveneTest(data$beliefs ~ data$infotype)
clown.model.1 <- kruskal.test(data$beliefs ~ data$infotype, data = data)
summary(clown.model.1)
clown.model.1
kruskalmc()
library(pgirmess)
kruskalmc()
kruskalmc(data$beliefs ~ data$infotype, data = data)
levels(data$infotype)
contrasts(data$infotype)
levels(data$infotype)
levels(data$infotype) <- c("None", "Advert", "Story", "Exposure")
contrasts(data$infotype)
kruskalmc(data$beliefs ~ data$infotype, data = data, cont = "two-tailed")
kruskalmc(data$beliefs ~ data$infotype, data = data, cont = "two-tailed")
kruskalmc(data$beliefs ~ data$infotype, data = data, cont = "one-tailed")
help(kruskalmc)
bike_data <- read.delim("Handlebars.dat")
bike_data
library(gmodels)
Dutch <- c(120, 578)
English <- c(17, 154)
handlebars_Table <- cbind(Dutch, English)
handlebars_Table
bike_data
subset(bike_data$Frequency, bike_data$Nationality == "Dutch")
one_hand <- subset(bike_data$Frequency, bike_data$Nationality == "Dutch")
two_hand <- subset(bike_data$Frequency, bike_data$Nationality == "English")
cbind(one_hand, two_hand)
rbind(one_hand, two_hand)
View(handlebars_Table)
bike_table <- rbind(one_hand, two_hand)
names(bike_table)
bike_table <- cbind(one_hand, two_hand)
bike_table
bike_table <- rbind(one_hand, two_hand)
bike_table
bike_data$Hands
one_hand <- subset(bike_data$Frequency, bike_data$Hands = "One Handed")
one_hand <- subset(bike_data$Frequency, bike_data$Hands == "One Handed")
two_hand <- subset(bike_data$Frequency, bike_data$Hands == "Two Handed")
bike_table <- rbind(one_hand, two_hand)
bike_table
names(bike_table) <- c("Dutch", "English")
bike_table
names(bike_table) <- colnames("Dutch", "English")
colnames(bike_table) <- c("Dutch", "English")
bike_table
View(bike_table)
one_hand <- subset(bike_data$Frequency, bike_data$Hands == "One Handed")
bike_data <- read.delim("Handlebars.dat")
one_hand <- subset(bike_data$Frequency, bike_data$Hands == "One Handed")
two_hand <- subset(bike_data$Frequency, bike_data$Hands == "Two Handed")
bike_table <- rbind(one_hand, two_hand)
colnames(bike_table) <- c("Dutch", "English")
bike_table
CrossTable(bike_table, fisher = FALSE, chisq = TRUE, expecte = TRUE, sresid = TRUE)
CrossTable(bike_table, fisher = FALSE, chisq = TRUE, expecte = TRUE, sresid = TRUE)
CrossTable(bike_table)
CrossTable(bike_table, fisher = FALSE, chisq = TRUE, sresid = TRUE)
CrossTable(bike_table, fisher = FALSE, chisq = TRUE, expected = FALSE, sresid = TRUE)
CrossTable(bike_table, fisher = FALSE, chisq = TRUE, expected = FALSE, sresid = TRUE)
CrossTable(bike_table, fisher = FALSE, chisq = FALSE, expected = FALSE, sresid = TRUE)
CrossTable(bike_table, fisher = FALSE, chisq = FALSE, expected = FALSE, sresid = FALSE)
shapiro.test(data$beliefs)
data$beliefs
data
data <- read.delim("coulrophobia.dat")
shapiro.test(data$beliefs)
by(data$beliefs, data$infotype , shapiro.test)
shapiro.test(subset(data$beliefs, data$infotype == "Advert"))
data <- read.delim("TutorMarks.dat")
kable(head(data))
data
dataLong <- melt(data, id = c("Essay"))
help(melt)
dataLong <- melt(data, id = "Essay")
library(reshape)
dataLong <- melt(data, id = "Essay")
dataLong <- melt(data, id = c("Essay"))
dataLong
setwd("~/Dropbox (Personal)/GradSchool/Thesis/GaitAnalysis/DualTask/Round0/Results")
data <- import("Merged_Experiments_cleaned.csv")
library(dplyr)
library(rio)
data <- import("Merged_Experiments_cleaned.csv")
library(reshape)
data
View(data)
mdata <- melt(data, id=c("Subject", "Difficulty"), measure.vars = c("Average Stride(ms)", "Stride Time Variation (%)", "Step Count", "Mean RT (ms)", "Omission Error (%)", "Comission Error (%)"))
View(mdata)
dataLong <- melt(data, id = c("Essay"))
help("melt")
mdata <- melt(data, id=c("Subject", "Difficulty"), measure.vars = c("Average Stride(ms)", "Stride Time Variation (%)", "Step Count", "Mean RT (ms)", "Omission Error (%)", "Comission Error (%)"))
mdata <- melt(data, id=c("Subject", "Difficulty"))
View(data)
View(mdat)
setwd("~/Dropbox (Personal)/GradSchool/Experimental Methods/R-Tutorials-1/_source")
data <- read.delim("TutorMarks.dat")
dataLong <- melt(data, id = c("Essay"))
data
dataLong <- melt(data, id = c("Essay"), measure.vars = c("tutor1", "tutor2"))
kable(dataLong)
dataLong
data <- read.delim("coulrophobia.dat")
kruskalmc(data$beliefs ~ data$infotype, data = data, cont = "two-tailed") # compare all to first level
kruskalmc(data$beliefs ~ data$infotype, data = data)
levels(data$infotype)
levels(data$infotype) <- c("None", "Advert", "Story", "Exposure") # re-order levels
kruskalmc(data$beliefs ~ data$infotype, data = data, cont = "two-tailed") # compare all to first level
contrasts(data$infotype)
kruskalmc(data$beliefs ~ data$infotype, data = data, cont = "two-tailed") # compare all to first level
kruskalmc(beliefs ~ infotype, data = data, cont = "two-tailed") # compare all to first level
clown.model.1 <- kruskal.test(beliefs ~ infotype, data = data)
clown.model.1
kruskalmc(beliefs ~ infotype, data = data)

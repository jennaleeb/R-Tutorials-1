---
asd
rnorm(n = 1, mean= 20, sd = 5)
rnorm(n = 1, mean= 20, sd = 5)
```
rnorm(n = 1, mean= 20, sd = 5)
rnorm(n = 1, mean= 20, sd = 5)
library(dplyr)
library(ggplot2)
z_data <- data_frame(z = rnorm(n = 10000, mean = 20, sd = 5))
z_data
p <- z_data %>% ggplot(aes(x = z))
p
p <- z_data %>% ggplot(aes(x = z))
p
p + geom_histogram()
p + geom_density()
p + geom_density()
rexp(1 , rate = 0.2)
rexp(n, rate = 0.2)
n <- 100
rexp(n, rate = 0.2)
n <- 10
k <- 1000
r_exp_data <- replicate(k, rexp(n, rate = 0.2))
sample_means <- data.frame(x_bar = apply(r_exp_data, 2, mean))
sample_means %>%
ggplot(aes(samples = x_bar)) + stat_qq()
sample_means %>%
ggplot(aes(x = x_bar)) + geom_histogram()
sample_means %>%
ggplot(aes(samples = x_bar)) + stat_qq()
library(rio)
library(dplyr)
library(knitr)
library(ggplot2)
import.packages("sem")
install.packages("sem")
library(sem)
ability_model <- specify.model(file = "ability_model.txt")
ability_model <- specifyModel(file = "ability_model.txt")
library(sem)
mod <- c("Ability     -> SCA, lambda1, NA",
"Ability     -> PPE, lambda2, NA",
"Ability     -> PTE, lambda3, NA",
"Ability     -> PFE, lambda4, NA",
"Aspiration  -> EA, lambda5, NA",
"Aspiration  -> CP, lambda6, NA",
"Ability    <-> Aspiration, rho, NA",
"SCA        <-> SCA, theta1, NA",
"PPE        <-> PPE, theta2, NA",
"PTE        <-> PTE, theta3, NA",
"PFE        <-> PFE, theta4, NA",
"EA         <-> EA, theta5, NA",
"CP         <-> CP, theta6, NA",
"Ability    <-> Ability, NA, 1",
"Aspiration <-> Aspiration, NA, 1")
writeLines(mod, con = "ability_model.txt")
ability_model <- specifyModel(file = "ability_model.txt")
ability_model
ability_sem <- sem(ability_model, ability, 556)
sem(ability_model, ability, 556)
data(sem)
data()
data(package = .packages(all.available = TRUE))
data(Tests)
Tests
data(Klein)
Klein
Klein$P[-22]
Klein$P.lag <- c(NA, Klein$P[-22])
Klein$X.lag <- c(NA, Klein$X[-22])
Klein[1:3,]
Klein.eqn1 <- tsls(C ~ P + P.lag + I(Wp + Wg),
+ instruments=~G + T + Wg + I(Year - 1931) + K.lag + P.lag + X.lag,
+ data=Klein)
Klein.eqn1 <- tsls(C ~ P + P.lag + I(Wp + Wg)
+ instruments=~G + T + Wg + I(Year - 1931) + K.lag + P.lag + X.lag
Klein.eqn1 <- tsls(C ~ P + P.lag + I(Wp + Wg) + instruments=~G + T + Wg + I(Year - 1931) + K.lag + P.lag + X.lag + data=Klein)
Klein.eqn1 <- tsls(C ~ P + P.lag + I(Wp + Wg), instruments=~G + T + Wg + I(Year - 1931) + K.lag + P.lag + X.lag, data=Klein)
Klein.eqn1
summary(Klein.eqn1)
help(tsls)
Klein
library(rio)
library(dplyr)
library(knitr)
library(ggplot2)
cluster <- import("cluster_output_6.csv")
setwd("~/")
library(rio)
setwd("~/")
ggplot(iris, aes(Sepal.Width)) + geom_histogram()
library(ggplot2)
ggplot(iris, aes(Sepal.Width)) + geom_histogram()
ggplot(iris, aes(Sepal.Width)) + geom_histogram() + stat_function(fun = tmpfun, args = c(mean=mean(residuals_list),
sd=sd(residuals_list)), size = 1, color = "red")
tmpfun <- function(x,mean,sd) {
diff(range(residuals_list))/30*length(residuals_list)*dnorm(x,mean,sd)
}
ggplot(iris, aes(Sepal.Width)) + geom_histogram() + stat_function(fun = tmpfun, args = c(mean=mean(residuals_list),
sd=sd(residuals_list)), size = 1, color = "red")
ggplot(iris, aes(Sepal.Width)) + geom_histogram() + stat_function(fun = tmpfun, args = c(mean=mean(residuals_list), size = 1, color = "red")
z
ggplot(iris, aes(Sepal.Width)) + geom_histogram() + stat_function(fun = tmpfun, args = c(mean=mean(residuals_list), size = 1, color = "red"))
ggplot(iris, aes(Sepal.Width)) + geom_histogram() + stat_function(fun = tmpfun, args = c(mean=mean(Sepal.Width), size = 1, color = "red"))
ggplot(iris, aes(Sepal.Width)) + geom_histogram() + stat_function(fun = tmpfun, args = c(mean=mean(iris$Sepal.Width), size = 1, color = "red"))
tmpfun <- function(x,mean,sd) {
diff(range(iris$Sepal.Width))/30*length(iris$Sepal.Width)*dnorm(x,mean,sd)
}
ggplot(iris, aes(Sepal.Width)) + geom_histogram() + stat_function(fun = tmpfun, args = c(mean=mean(iris$Sepal.Width), size = 1, color = "red"))
ggplot(iris, aes(Sepal.Width)) + geom_histogram()
ggplot(iris, aes(Sepal.Width)) + geom_histogram() + stat_function(dnorm)
iris
head(iris)
iris
ggplot(iris, aes(Sepal.Width)) + geom_boxplot()
ggplot(iris, aes(Species, Sepal.Width)) + geom_boxplot()
str(Species)
str(iris$Species)
getwd()
setwd("~/Dropbox/GradSchool/Experimental Methods/R-Tutorials-1/_source")
esoph
head(esoph)
model1 <- glm(cbind(ncases, ncontrols) ~ agegp + tobgp * alcgp,
data = esoph, family = binomial())
anova(model1)
head(longley)
require(stats); require(graphics)
longley.x <- data.matrix(longley[, 1:6])
longley.y <- longley[, "Employed"]
pairs(longley, main = "longley data")
summary(fm1 <- lm(Employed ~ ., data = longley))
longley.x
longley.y
pairs(longley, main = "longley data")
summary(fm1 <- lm(Employed ~ ., data = longley))
opar <- par(mfrow = c(2, 2), oma = c(0, 0, 1.1, 0),
mar = c(4.1, 4.1, 2.1, 1.1))
plot(fm1)
par(opar)
head(longley)
summary(fm1 <- lm(Employed ~ ., data = longley))
ggplot(longley, aes(Employed, Year)) + geom_point()
ggplot(longley, aes(Employed, Year)) + geom_point() + geom_smooth(method="lm")
ggplot(longley, aes(Employed, Year)) + geom_point()
ggplot(longley, aes(Employed, Year)) + geom_point() + geom_smooth(method="lm")
ggplot(longley, aes(Year, Employed)) + geom_point() + geom_smooth(method="lm")
ggplot(longley, aes(Year, Employed)) + geom_point()
ggplot(longley, aes(Year, Employed)) + geom_point() + geom_smooth(method="lm")
head(longley)
library(datasets)
kable(head(longley))
library(knitr)
library(datasets)
kable(head(longley))
</style>
lm(Employed ~ .)
summary(fm1 <- lm(Employed ~ ., data = longley))
swiss
head(swiss)
pairs(swiss, panel = panel.smooth,
col = 3 + (swiss$Catholic > 50))
summary(lm(Fertility ~ . , data = swiss))
ggplot(swiss, aes(Education, Fertility)) + geom_point() + geom_smooth(method="lm")
```
ggplot(swiss, aes(Catholic, Fertility)) + geom_point() + geom_smooth(method="lm")
ggplot(swiss, aes(Year, Employed)) + geom_point() + geom_smooth(method="lm")
ggplot(longley, aes(Year, Employed)) + geom_point() + geom_smooth(method="lm")
library(datasets)
kable(head(longley))
lm.1 <- lm(Employed ~ GDP, data = longley)
lm.1 <- lm(Employed ~ GNP, data = longley)
summary(lm.1)
cor(GNP, Employment, data = longley)
cor.test(GNP, Employment, data = longley)
cor(longley$GNP, longley$Employment)
longley$Employment
head(longley)
cor(longley$GNP, longley$Employed)
sqrt(0.9674)
sqrt(0.965)
sqrt(0.9674)
cor(longley$GNP, longley$Employed)
round(sqrt(0.9674), 3)
round(sqrt(0.9674), 4)
round(cor(longley$GNP, longley$Employed), 4)
lm.1$terms
lm.1$coefficients
lm.1$effects
lm.1$qr
round(sqrt(0.9674), 4)
summary(lm.1)
summary(fm1 <- lm(Employed ~ ., data = longley))
summary(longley)
lm.1 <- lm(Employed ~ GNP, data = longley)
summary(lm.1)
head(longley)
lm.1 <- lm(Employed ~ Armed.Forces, data = longley)
summary(lm.1)
lm.1 <- lm(Employed ~ GNP, data = longley)
summary(lm.1)
head(car)
library(car)
head(car)
head(longley)
help(summar)
help(summary)
summary(longley)
summary(longley, simple = TRUE)
stat.desc(longley)
library(pastecs)
stat.desc(longley)
stat.desc(longley, basic=TRU)
stat.desc(longley, basic=TRUE)
stat.desc(longley, basic=FALSE)
class(longley)
str(longley)
pairs.panel(longley)
pairs.panels(longley)
pairs(longley)
library(psych)
pairs.panels(longley)
pairs.panels(longley, lm=TRUE)
pairs.panels(longley)
summary(fm1 <- lm(Employed ~ ., data = longley))
lm.2 <- lm(Employed ~ ., data = longley)
summary(lm.2)
lm.beta(lm.2)
library(lm.beta)
library("QuantPsyc", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
lm.beta(lm.2)
library(QuantPsyc)
lm.beta(lm.2)
- If you use hierarchical regression, you can compare improvement at each stage of analysis by looking at the change in $R^2$, and testing if that change is significant using `r anova()`
anova(lm.1, lm.2)
rstandard(lm.2)
cor(longley)
1/vif(longley)
vif(longley)
1/vif(lm.2)
vif(lm.2)
1/vif(lm.2) # problem if tolerance < 0.1
1/mean(vif(lm.2)) # problem if tolerance < 0.1
mean(vif(lm.2))
hist(album2$studentized.residuals)
hist(rstudent(lm.2))
plot(lm.2)
vif(lm.2) # problem if largest VIF is > 10
library(car)
plot(lm.2)
head(longley)
lm.2 <- lm(Employed ~ GNP.deflator + GNP + Unemployed + Armed.Forces + Population, data = longley)
summary(lm.2)
lm.3 <- lm(Employed ~ ., data = longley)
anova(lm.2, lm.3)
vif(lm.3) # problem if largest VIF is > 10
lm.3
vif(lm.2) # problem if largest VIF is > 10
mean(vif(lm.2)) # regression may be biased if substantially > 1
1/vif(lm.2) # problem if tolerance < 0.1
head(longley)
lm.2 <- lm(Employed ~ GNP.deflator + GNP + Unemployed + Armed.Forces + Population + Year, data = longley)
lm.2 <- lm(Employed ~ ., data = longley)
plot(lm.2)
plot(lm.2)
plot(lm.2)
plot(lm.2)
principal(longley, 2)
principal(longley, 2, rotate="oblimin")
longley
principal(longley, 7)
principal(longley, 3, rotate="oblimin")
principal(longley, 3, rotate="oblimin")
plot(lm.2)
subset(longley, )
airquality
head(airquality)
principal(longley, 3, rotate="oblimin")
longley.uncor <- subset(longley, -c("Year"))
longley.uncor <- subset(longley, -c("Year", "GNP.deflator"))
longley.uncor <- subset(longley, select = c("GNP", "Unemployed", "Armed.Forces", "Employed"))
cor(langley)
cor(longley)
head(longley)
longley[-1947]
longley[-c(1947)]
longley[-c(1)]
longley[-c(1),]
longley[-c(1947),]
rownames(longley)
longley["1947",]
plot(lm.2)
longley[-c("1947"), ]
longley[-c(1947), ]
longley["1951",]
!longley["1951",]
longley["1951",]
longley[!"1951",]
longley[c("1951"),]
longley[!c("1951"),]
longley[-c("1951"),]
longley[c("1951"),]
longley[!longley[c("1951"),],]
subset(longley, Year > 1900)
subset(longley, Year != 1951)
subset(longley, Year != 1947)
longley.rm_outliers <- subset(longley, Year != 1947)
subset(longley, Year != 1947)
longley.rm_outliers <- subset(longley, Year != 1951)
longley.rm_outliers
na.omit(longley)
lm.2 <- lm(Employed ~ GNP.deflator + GNP + Unemployed + Armed.Forces + Population + Year, data = longley)
summary(lm.2)
summary(lm.2)
summary(lm.1)
nrow(longley)
summary(lm.1)
summary(lm.2)
summary(longley)
summary(na.omit(longley))
stat.desc(longley, basic=FALSE)
stat.desc(longley, basic=FALSE)
summary(na.omit(longley))
stat.desc(longley, basic=FALSE)
stat.desc(longley, basic=TRUE)
stat.desc(longley, basic=TRUE, norm = TRUE)
help(stat.desc)
summary(lm(Employed ~ GNP, data = longley))
help(longley)
summary(lm.2)
lm.2 <- lm(Employed ~ GNP.deflator + GNP + Unemployed + Armed.Forces + Population + Year, data = longley)
summary(lm.2)
summary(longley)
summary(lm.2)
lm.beta(lm.2)
summary(lm.2)
plot(lm.2)
plot(lm.2)
plot(lm.2)
